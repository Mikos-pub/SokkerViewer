<?xml version="1.0" encoding="iso-8859-2"?>
<project name="sokker_viewer" basedir=".." default="post_clean">
	<description>
        Some description here..
    </description>

	<property name="user.name" value="Radoslaw Rymaszewski" />
	<property name="version" value="0.13.2" />
	<!-- windows; linux; mac -->
	<property name="os.name.value" value="linux" />
	<!-- testing or stable -->
	<property name="software.type" value="stable" />

	<property name="resources" value="src/main/resources/" />

	<property name="itext" value="itext-1.4.2.jar" />
	<property name="htmlentities" value="htmlentities-1.0.0.jar" />
	<property name="jfreechart" value="jfreechart-1.0.1.jar" />
	<property name="jcommon" value="jcommon-1.0.0.jar" />
	<property name="hsqldb" value="hsqldb-1.8.0.10.jar" />

	<property name="core" value="core-${version}.jar" />
	<property name="ui" value="ui-${version}.jar" />
	<property name="headers" value="headers-${version}.jar" />
	<property name="flags" value="flags-0.13.jar" />
	<property name="images" value="images-0.13.jar" />
	<property name="lang" value="lang-0.13.jar" />
	<property name="properties" value="properties-0.10.jar" />
	<property name="sql" value="sql-0.13.2.zip" />
	<property name="fonts" value="fonts-0.12.zip" />

	<property name="build.classes.dir" location="packages/classes/" />
	<property name="build.dir" location=".." />
	<property name="src.dir" location="src/main/java" />
	<property name="root.dir" location="" />
	<property name="sokker.dir" location="packages/${os.name.value}/sokker" />
	<property name="packages.dir" location="packages" />
	<property name="release.dir" location="${packages.dir}/release" />
	<property name="temp.dir" location="packages/temp" />

	<!-- source directories -->
	<property name="fonts.src.dir" location="src/main/resources/fonts/" />
	<property name="lang.src.dir" location="src/main/resources/lang/" />
	<property name="lib.src.dir" location="src/main/resources/lib/" />
	<property name="settings.src.dir" location="settings/" />
	<property name="sql.src.dir" location="sql/" />
	<property name="description.src.dir" location="description/" />

	<!-- destination directories -->
	<property name="fonts.dst.dir" location="${sokker.dir}/fonts/" />
	<property name="lib.dst.dir" location="${sokker.dir}/lib/" />
	<property name="settings.dst.dir" location="${sokker.dir}/settings/" />
	<property name="bak.dst.dir" location="${sokker.dir}/bak/" />
	<property name="xml.dst.dir" location="${sokker.dir}/xml/" />
	<property name="db.dst.dir" location="${sokker.dir}/db/" />
	<property name="sql.dst.dir" location="${sokker.dir}/sql/" />
	<property name="resources.dst.dir" location="${sokker.dir}/resources/" />
	<property name="packages.dst.dir" location="packages/${software.type}/packages/" />
	<property name="os.packages.dst.dir" location="packages/${software.type}/packages/${os.name.value}/" />
	<property name="tmp.dst.dir" location="${sokker.dir}/tmp" />
	
	<target name="pre_clean">
		<delete dir="${build.classes.dir}" />
		<delete dir="${sokker.dir}" />
	</target>

	<target name="structure" depends="pre_clean">

		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${lib.dst.dir}" />
		<mkdir dir="${settings.dst.dir}" />
		<mkdir dir="${bak.dst.dir}" />
		<mkdir dir="${xml.dst.dir}" />
		<mkdir dir="${db.dst.dir}" />
		<mkdir dir="${sql.dst.dir}" />
		<mkdir dir="${resources.dst.dir}" />
		<mkdir dir="${packages.dst.dir}" />
		<mkdir dir="packages/${software.type}/${os.name.value}" />
		<mkdir dir="${release.dir}/${software.type}/${os.name.value}" />
		<mkdir dir="${tmp.dst.dir}" />
	</target>

	<target name="copy" depends="structure">
		<copy todir="${lib.dst.dir}" file="${lib.src.dir}${itext}" />
		<copy todir="${lib.dst.dir}" file="${lib.src.dir}${htmlentities}" />
		<copy todir="${lib.dst.dir}" file="${lib.src.dir}${hsqldb}" />
		<copy todir="${lib.dst.dir}" file="${lib.src.dir}${jcommon}" />
		<copy todir="${lib.dst.dir}" file="${lib.src.dir}${jfreechart}" />
		<copy tofile="${lib.dst.dir}/swt.jar" file="${lib.src.dir}${swt}" />

		<copy todir="${sokker.dir}">
			<fileset dir="src/main/resources/images/">
				<include name="installSokkerViewer.ico" />
			</fileset>
		</copy>

		<!--<copy todir="${sokker.dir}">
			<fileset dir="ext/">
				<include name="SokkerViewer.exe" />
			</fileset>
		</copy>-->

		<copy todir="${fonts.dst.dir}">
			<fileset dir="${fonts.src.dir}" />
		</copy>

		<copy file="${settings.src.dir}/plugins.properties.example" tofile="${settings.dst.dir}/plugins.properties" />
		<copy file="${settings.src.dir}/sokker.properties.example" tofile="${settings.dst.dir}/sokker.properties" />

		<copy todir="${sql.dst.dir}">
			<fileset dir="${sql.src.dir}" />
		</copy>
	</target>

	<target name="resources" depends="copy">
		<jar destfile="${resources.dst.dir}/${flags}" basedir="${resources}" includes="flags/**" />
		<jar destfile="${resources.dst.dir}/${images}" basedir="${resources}" includes="images/**" />
		<jar destfile="${resources.dst.dir}/${lang}" basedir="${resources}" includes="lang/**" />
		<jar destfile="${resources.dst.dir}/${properties}" basedir="${resources}" includes="properties/*" />
	</target>

	<target name="compile" depends="resources">
		<delete dir="${build.classes.dir}" />
		<mkdir dir="${build.classes.dir}" />

		<javac srcdir="${src.dir}/pl/pronux/sokker/" destdir="${build.classes.dir}" includes="interfaces/**,enums/**">
			<classpath>
				<pathelement location="${lib.src.dir}${itext}" />
				<pathelement location="${lib.src.dir}${jfreechart}" />
				<pathelement location="${lib.src.dir}${jcommon}" />
				<pathelement location="${lib.src.dir}${hsqldb}" />
				<pathelement location="${lib.src.dir}${swt}" />
				<pathelement location="${lib.src.dir}${htmlentities}" />
			</classpath>
		</javac>
		<jar destfile="${lib.dst.dir}/${headers}" basedir="${build.classes.dir}" />

		<delete dir="${build.classes.dir}" />
		<mkdir dir="${build.classes.dir}" />

		<javac srcdir="${src.dir}/pl/pronux/sokker/" destdir="${build.classes.dir}">
			<classpath>
				<pathelement location="${lib.src.dir}/${itext}" />
				<pathelement location="${lib.src.dir}/${jfreechart}" />
				<pathelement location="${lib.src.dir}/${jcommon}" />
				<pathelement location="${lib.src.dir}/${hsqldb}" />
				<pathelement location="${lib.src.dir}/${htmlentities}" />
				<pathelement location="${lib.dst.dir}/${headers}" />
			</classpath>
			<exclude name="launcher/**" />
			<exclude name="ui/**" />
			<exclude name="interfaces/**" />
		</javac>
		<jar destfile="${lib.dst.dir}/${core}" basedir="${build.classes.dir}" />

		<delete dir="${build.classes.dir}" />
		<mkdir dir="${build.classes.dir}" />

		<javac srcdir="${src.dir}/pl/pronux/sokker/ui/" destdir="${build.classes.dir}">
			<classpath>
				<pathelement location="${lib.src.dir}/${itext}" />
				<pathelement location="${lib.src.dir}/${jfreechart}" />
				<pathelement location="${lib.src.dir}/${jcommon}" />
				<pathelement location="${lib.src.dir}/${hsqldb}" />
				<pathelement location="${lib.src.dir}/${swt}" />
				<pathelement location="${lib.src.dir}/${htmlentities}" />
				<pathelement location="${lib.dst.dir}/${core}" />
				<pathelement location="${lib.dst.dir}/${headers}" />
			</classpath>
		</javac>
		<jar destfile="${lib.dst.dir}/${ui}" basedir="${build.classes.dir}" />

		<delete dir="${build.classes.dir}" />
		<mkdir dir="${build.classes.dir}" />

		<javac srcdir="${src.dir}/pl/pronux/sokker/launcher/" destdir="${build.classes.dir}">
			<classpath>
				<pathelement location="${lib.src.dir}/${itext}" />
				<pathelement location="${lib.src.dir}/${jfreechart}" />
				<pathelement location="${lib.src.dir}/${jcommon}" />
				<pathelement location="${lib.src.dir}/${hsqldb}" />
				<pathelement location="${lib.src.dir}/${swt}" />
				<pathelement location="${lib.src.dir}/${htmlentities}" />
				<pathelement location="${lib.dst.dir}/${core}" />
				<pathelement location="${lib.dst.dir}/${ui}" />
				<pathelement location="${lib.dst.dir}/${headers}" />
			</classpath>
		</javac>
		<jar destfile="${sokker.dir}/Launcher.jar" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="pl.pronux.sokker.launcher.Launcher" />
				<attribute name="Class-Path" value="lib/${pgsql} lib/${headers} lib/${core} lib/${ui} lib/${itext} lib/${htmlentities} lib/${jfreechart} lib/${jcommon} lib/${hsqldb} lib/swt.jar resources/${flags} resources/${images} resources/${lang} resources/${properties}" />
			</manifest>
		</jar>
	</target>

	<target name="zip" depends="compile">
		<zip destfile="${packages.dst.dir}/${sql}" basedir="${sql.src.dir}" includes="*" />
		<zip destfile="${packages.dst.dir}/${fonts}" basedir="${fonts.src.dir}" includes="*" />
	</target>

	<target name="packages" depends="zip">
		<get src="http://www.sokkerviewer.net/sv/updates/${software.type}/${os.name.value}/packages.xml" dest="packages/${software.type}/${os.name.value}/packages.xml" />
		<get src="http://www.sokkerviewer.net/sv/updates/${software.type}/${os.name.value}/packages.xml.md5" dest="packages/${software.type}/${os.name.value}/packages.xml.md5" />
		<get src="http://www.sokkerviewer.net/sv/updates/${software.type}/${os.name.value}/packages.xml" dest="packages/${os.name.value}/sokker/packages.xml" />
		<copy todir="${packages.dst.dir}">
			<fileset dir="${lib.dst.dir}">
				<include name="${itext}" />
				<include name="${htmlentities}" />
				<include name="${hsqldb}" />
				<include name="${jcommon}" />
				<include name="${jfreechart}" />
				<include name="${core}" />
				<include name="${ui}" />
				<include name="${headers}" />
			</fileset>
		</copy>

		<copy todir="${packages.dst.dir}">
			<fileset dir="${resources.dst.dir}">
				<include name="${lang}" />
				<include name="${images}" />
				<include name="${flags}" />
				<include name="${properties}" />
			</fileset>
		</copy>

		<copy todir="${packages.dst.dir}">
			<fileset dir="${sokker.dir}">
				<include name="Launcher.jar" />
			</fileset>
		</copy>

		<copy todir="${packages.dst.dir}/description/">
			<fileset dir="${description.src.dir}/${software.type}">
				<include name="*" />
			</fileset>
		</copy>

		<copy file="${lib.dst.dir}/swt.jar" todir="${packages.dst.dir}/${os.name.value}/" />
	</target>

	<target name="compress" depends="packages">
		<zip destfile="${release.dir}/${software.type}/${os.name.value}/sokker-${version}.zip" basedir="${sokker.dir}" />
	</target>

	<target name="checksum" depends="compress">
		<checksum file="${release.dir}/${software.type}/${os.name.value}/sokker-${version}.zip" forceOverwrite="yes" algorithm="MD5" />
		<echo file="${release.dir}/${software.type}/${os.name.value}/sokker-${version}.zip.MD5" append="true">  sokker-${version}.zip</echo>
	</target>

	<target name="post_clean" depends="checksum">
		<delete dir="${build.classes.dir}" />
		<delete dir="${temp.dir}" />
	</target>

</project>